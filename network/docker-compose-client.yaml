version: '2'

services:
  ipfs:
    container_name: ipfs.example.com
    image: ipfs/go-ipfs:v0.18.1
    environment:
      - IPFS_PROFILE=server
    volumes:
      - ipfs_staging:/export
      - ipfs_data:/data/ipfs
    restart: unless-stopped
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    networks:
      ecg_network:
        ipv4_address: 172.20.1.6

  client:
    container_name: client.example.com
    image: python:3.9-slim
    environment:
      - PYTHONPATH=/app
      - PATH=/tmp/fabric-bin:$PATH
      - FABRIC_CFG_PATH=/app/config
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_ADDRESS=10.34.100.126:7051
      - CORE_PEER_TLS_ROOTCERT_FILE=/app/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/app/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    volumes:
      - ../client:/app
      - ./crypto-config:/app/crypto-config:ro
      - ./channel-artifacts:/app/channel-artifacts:ro
      - ./config:/app/config:ro
    working_dir: /app
    command: bash -c "
      apt-get update && 
      apt-get install -y wget curl netcat-openbsd && 
      mkdir -p /tmp/fabric-bin &&
      cd /tmp &&
      wget -q https://github.com/hyperledger/fabric/releases/download/v2.5.9/hyperledger-fabric-linux-amd64-2.5.9.tar.gz &&
      tar -xzf hyperledger-fabric-linux-amd64-2.5.9.tar.gz &&
      cp bin/* /tmp/fabric-bin/ &&
      chmod +x /tmp/fabric-bin/* &&
      cd /app &&
      pip install -r requirements.txt && 
      python app/webapp.py"
    depends_on:
      - ipfs
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      ecg_network:
        ipv4_address: 172.20.1.7

volumes:
  ipfs_staging:
  ipfs_data:

networks:
  ecg_network:
    external: true
